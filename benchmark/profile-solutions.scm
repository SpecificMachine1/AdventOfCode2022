(cond-expand
  (gauche
    (import (scheme base)
            (scheme file)
            (day 1) (day 2) (day 3) (day 4) (prefix  (day 5) day5-) (prefix (day 6) day6-)
            (benchmark profiler))))
(start-run)
(run "\"solution for 1.1 most calories\"" (most-calories (get-data (open-input-file "../data/day1-input.dat"))))
(run "1.2 calories of top three" (calories-of-top-three (get-data (open-input-file "../data/day1-input.dat"))))
(run "2.1 first method score" (score-games-2 (get-data-2 "../data/day2-input.dat")))
(run "2.2 second method score" (score-games-2.1 (get-data-2 "../data/day2-input.dat")))
(run "3.1 compartment priority sum" (filename->result-3.1 "../data/day3-input.dat"))
(run "3.2 badge priority sum" (filename->result-3.2 "../data/day3-input.dat"))
(run "4.1 fully contained ranges" (filename->result-4.1 "../data/day4-input.dat"))
(run "4.2 overlapping ranges" (filename->result-4.2 "../data/day4-input.dat"))
(run "5.1  mov one at a time" (day5-get-result (day5-run-job (day5-get-data "../data/day5-input.dat"))))
(run "5.2  mov all at once" (day5-get-result (day5-run-job-2 (day5-get-data "../data/day5-input.dat"))))
(run "6.1 find packet start" (day6-ds-start (day6-get-data "../data/day6-input.dat")))
(run "6.2 find packet start" (day6-get-start-of-message (day6-get-data "../data/day6-input.dat")))
